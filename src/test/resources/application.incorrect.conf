include "project"

env-suffix = ""
env-suffix = ${ENV_SUFFIX}

core-database {
  source = com.mysql.cj.jdbc.MysqlConnectionPoolDataSource
  name = ${app.name}-db${env-suffix}
  host = undefined
  port = 3306
  username = ${app.name}
  password = undefined
}

dragon-database {
  source = com.mysql.cj.jdbc.MysqlConnectionPoolDataSource
  name = ${app.name}-db${env-suffix}
  host = undefined
  port = 3306
  username = ${app.name}
  password = undefined
}

mq {
  broker {
    label = undefined
    host = undefined
    port = 5566
    username = undefined
    password = undefined
    use-ssl = false
  }

  consumer {
    label = queue-consumer
    is-enabled = true
    queue-name = undefined-q${env-suffix}
    prefetch-count = 1
    is-requeued-to-original = false
    timeout = 12.seconds
  }

  self-publisher {
    label = dragon-publisher
    is-enabled = true
    exchange-name = undefined-x${env-suffix}
    routing-key = ""
    is-mandatory = true
    must-wait-for-confirm = true
  }

  cygnus-publisher {
    label = cygnus-publisher
    is-enabled = true
    exchange-name = undefined-ext-x${env-suffix}
    routing-key = ""
    is-mandatory = true
    must-wait-for-confirm = true
  }

  email-publisher {
    label = email-publisher
    is-enabled = true
    exchange-name = undefined-ext-x${env-suffix}
    routing-key = ""
    is-mandatory = true
    must-wait-for-confirm = true
  }

  topology {
    exchanges = [
      {
        name = undefined-x${env-suffix}
        type = direct
        is-internal = false
        args {
        }
      }
    ]
    queues = [
      {
        name = undefined-q${env-suffix}
        args {
          incorrect-x-queue-type = classic
          incorrect-x-dead-letter-exchange = undefined-dlx${env-suffix}
        }
      }
    ]
    dlxs = [
      {
        name = undefined-dlx${env-suffix}
        type = direct
        is-internal = true
        args {
        }
      }
    ]
    dlqs = [
      {
        name = undefined-dlq${env-suffix}
        args {
          incorrect-x-queue-type = classic
          incorrect-x-dead-letter-exchange = undefined-x${env-suffix}
          incorrect-x-message-ttl = 2.minutes
        }
      }
    ]
    bindings = [
      {
        exchange-name = undefined-x${env-suffix}
        queue-name = undefined-q${env-suffix}
      }
      {
        exchange-name = undefined-dlx${env-suffix}
        queue-name = undefined-dlq${env-suffix}
      }
    ]

  }

}

dbfs {
  new-user-default-password = password
  days-till-expiry = 30
  magic-link-path = "http://localhost:5000/magic-link"
  otp-validity-in-minutes = 10
  otp-retries = 5
  report-s-3-public-path = fakepath
}

customer {
  source: fakesource
  nw-api-key: fakeapikey
}

services {
  core {
    source = ${app.name}${env-suffix}
    destination = cx-cognifyx-core${env-suffix}
    address = "/$/inet/localhost:5000/443"
  }
  alerter {
      source = ${app.name}${env-suffix}
      destination = google-chat
      address = "/$/inet/chat.googleapis.com/443"
      args {
        space = ${GCHAT_ALERT_SPACE}
        key = "AIzaSyDdI0hCZtE6vySjMm-WEfRq3CPzqKqqsHI"
        token = ${GCHAT_ALERT_TOKEN}
      }
  }
  customer {
    source = ${app.name}${env-suffix}
    destination = apollo-server
    address = fakeaddress
    username = fakeusername
    password = fakepassword
    http-min-retry-delay = ${min_retry_delay},
    http-max-retry-delay = ${max_retry_delay},
    http-max-retries = ${max_retries}
  }
}

aws {
  region = fakes3region
  access-key = fakeaccesskey
  access-secret = fakeaccesssecret
  storage {
    bucket = fakes3bucket
  }
}

app-timezone = Asia/Singapore

